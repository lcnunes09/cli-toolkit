#!/bin/bash
# ghstatus - Show Git repo status at a glance

set -euo pipefail

# ── Defaults ──────────────────────────────────────────────
VERBOSE=false
BASE_BRANCH=""

# ── Parse CLI Arguments ───────────────────────────────────
for (( i=1; i<=$#; i++ )); do
  case "${!i}" in
    --verbose|-v) VERBOSE=true ;;
    --base)
      j=$((i + 1))
      BASE_BRANCH="${!j:-}"
      if [[ -z "$BASE_BRANCH" ]]; then
        echo "❌ Missing value for --base"
        exit 1
      fi
      break
      ;;
  esac
done

# ── Ensure we're inside a Git repo ────────────────────────
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "🚫 Not inside a Git repository."
  exit 1
fi

CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
UNCOMMITTED=$(git status --porcelain)
UNPUSHED_COUNT=$(git log --branches --not --remotes --oneline | wc -l | xargs)
REMOTE=$(git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)")

# ── Determine branch to check unmerged status against ─────
TARGET_BRANCH="$CURRENT_BRANCH"
[[ -n "$BASE_BRANCH" ]] && TARGET_BRANCH="$BASE_BRANCH"

RAW_UNMERGED=$(git branch --no-merged "$TARGET_BRANCH" 2>/dev/null | sed 's/^[* ]*//' | grep -Ev "^(${TARGET_BRANCH})$" || true)
TRIMMED_UNMERGED=$(echo "$RAW_UNMERGED" | sed '/^\s*$/d')
UNMERGED_COUNT=$(echo "$TRIMMED_UNMERGED" | wc -l | xargs)

# ── Output ────────────────────────────────────────────────
echo "🧭 Branch: $CURRENT_BRANCH"
echo "📌 Uncommitted changes: $( [ -z "$UNCOMMITTED" ] && echo "no" || echo "yes" )"
echo "⬆️ Unpushed commits: $UNPUSHED_COUNT"
echo "📦 Unmerged branches (into $TARGET_BRANCH): $UNMERGED_COUNT"
echo "🔗 Remote tracking: ${REMOTE:-none}"

if [[ "$VERBOSE" == true ]]; then
  echo ""
  echo "📄 Unpushed commits:"
  git --no-pager log --branches --not --remotes --oneline || echo "✔️ None"

  echo ""
  echo "🌿 Unmerged branches into '$TARGET_BRANCH':"
  if [[ "$UNMERGED_COUNT" -gt 0 ]]; then
    echo "$TRIMMED_UNMERGED"
  else
    echo "✔️ None"
  fi
fi

echo ""
echo "✅ ghstatus completed!"
